eu.essi_lab.vlab.aws.s3.accessKey=<Mandatory, username of S3 storage service>
eu.essi_lab.vlab.aws.s3.secretKey=<Mandatory, password of S3 storage service>
eu.essi_lab.vlab.aws.s3.url=<Optional, url of S3 storage>
eu.essi_lab.vlab.aws.s3.region=<Optional, region of S3 storage>

eu.essi_lab.vlab.storage.bprun.status.folder=<Mandatory, folder name of run status>
eu.essi_lab.vlab.storage.output.folder=<Mandatory, bucket name of run outputs>
eu.essi_lab.vlab.storage.bprun.folder=<Mandatory, name of run folder/index>
eu.essi_lab.vlab.storage.ebp.folder=<Mandatory, bucket name of BPMN>

eu.essi_lab.vlab.queue.service.type=<Mandatory, queue service type (sqs, kubemq)>
eu.essi_lab.vlab.aws.sqs.region=<Optional, region of queue service type>
eu.essi_lab.vlab.aws.sqs.accessKey=<Mandatory, username of queue service type>
eu.essi_lab.vlab.aws.sqs.secretKey=<Mandatory, password of queue service type>
eu.essi_lab.vlab.aws.sqs.bprun.queque=<Mandatory, queue name of runs>
eu.essi_lab.vlab.queue.kubemq.clientid=<Conditional, client id of kubemq service (this is required when eu.essi_lab.vlab.queue.service.type=kubemq)> 
eu.essi_lab.vlab.queue.server=<Conditional, queue service url (this is required when eu.essi_lab.vlab.queue.service.type=kubemq)>

eu.essi_lab.vlab.storage.bprun.type=<Mandatory, service type used to store runs (essqs)>

eu.essi_lab.vlab.storage.es.url=<Mandatory, elastic search service url>
eu.essi_lab.vlab.storage.es.user=<Mandatory, elastic username service url>
eu.essi_lab.vlab.storage.es.pwd=<Mandatory, elastic password service url>
eu.essi_lab.vlab.aws.es.region=<Conditional, region of elastic service (required when using AWS Elasticsearch SaaS)>


eu.essi_lab.vlab.storage.executable.type=<Mandatory, service type used to store model descriptions (rdf)>
eu.essi_lab.vlab.storage.rdf=<Mandatory, RDF service url used to query rdf repository>
eu.essi_lab.vlab.storage.rdf.update=<Mandatory, RDF service url used to store/update rdf repository>

eu.essi_lab.vlab.aws.deploy.ecs.accessKey=<Conditional, access key of aws ecs (this is required when VLab is deployed on AWS ECS)>
eu.essi_lab.vlab.aws.deploy.ecs.secretKey=<Conditional, secret key of aws ecs (this is required when VLab is deployed on AWS ECS)>
eu.essi_lab.vlab.aws.deploy.ecs.region=<Conditional, region of aws ecs (this is required when VLab is deployed on AWS ECS)>
#NOTE the log group must already exist
eu.essi_lab.vlab.aws.deploy.ecs.loggroup=<Conditional, log group name where controller execution logs are stored (this is used when VLab is deployed on AWS ECS)>
eu.essi_lab.vlab.aws.deploy.ecs.logprefix=<Optional, log group name where controller execution logs are stored (this is used when VLab is deployed on AWS ECS). Default value is "bpenginedeploy">

eu.essi_lab.vlab.aws.ecs.efsfolder=<Conditional, path of the EFS folder on AWS EC2 instances where models will be run (this is required when VLab is deployed on AWS ECS)>
eu.essi_lab.vlab.aws.ecs.cluster.name=<Conditional, name of ecs cluster where VLab controller is executed (this is required when VLab is deployed on AWS ECS)>

eu.essi_lab.vlab.execute.infrastructure.type=<Mandatory, type of the compute infrastructure (aws, kubernetes)>
eu.essi_lab.vlab.execute.infrastructure.identifier=<Mandatory, identifier of the compute infrastructure>
eu.essi_lab.vlab.execute.infrastructure.label=<Optional, label of the compute infrastructure>

eu.essi_lab.vlab.aws.execute.ecs.accessKey=<Conditional, access key of aws ecs (this is required when eu.essi_lab.vlab.execute.infrastructure.type=aws)>
eu.essi_lab.vlab.aws.execute.ecs.secretKey=<Conditional, secret key of aws ecs (this is required when eu.essi_lab.vlab.execute.infrastructure.type=aws)>
eu.essi_lab.vlab.aws.execute.ecs.region=<Conditional, region of aws ecs (this is required when eu.essi_lab.vlab.execute.infrastructure.type=aws)>
eu.essi_lab.vlab.aws.execute.ecs.cluster.model.name=<Conditional, name of ecs cluster where models are executed (this is required when eu.essi_lab.vlab.execute.infrastructure.type=aws)>
eu.essi_lab.vlab.aws.asg.groups=<Conditional, comma-separated list of identifiers of AWS asg which can be used to instantiate ec2 instances for model execution (this is required when eu.essi_lab.vlab.execute.infrastructure.type=aws)>

eu.essi_lab.vlab.kubernetes.serverurl=<Conditional, url of model execution kubernetes cluster APIs (this is required when eu.essi_lab.vlab.execute.infrastructure.type=kubernetes)>
eu.essi_lab.vlab.kubernetes.token=<Conditional, token used for authenticating to model execution kubernetes cluster APIs (this is required when eu.essi_lab.vlab.execute.infrastructure.type=kubernetes)>
eu.essi_lab.vlab.kubernetes.executor=<Conditional, kubernetes node selector for model execution (this is required when eu.essi_lab.vlab.execute.infrastructure.type=kubernetes)>
eu.essi_lab.vlab.kubernetes.controller=<Conditional, kubernetes node selector for VLab controller execution (this is required when eu.essi_lab.vlab.execute.infrastructure.type=kubernetes)>
eu.essi_lab.vlab.kubernetes.executor.tolerations=<Optional, kubernetes node tolerations for VLab controller execution, example vlabkey=taint (this is used when eu.essi_lab.vlab.execute.infrastructure.type=kubernetes)>
eu.essi_lab.vlab.kubernetes.controller.tolerations=Conditional, kubernetes node tolerations for VLab controller execution, example vlabkey=taint (this is used when eu.essi_lab.vlab.execute.infrastructure.type=kubernetes)>
eu.essi_lab.vlab.kubernetes.pv=<Conditional, kubernetes Persistent Volume (this is required when eu.essi_lab.vlab.execute.infrastructure.type=kubernetes)>
eu.essi_lab.vlab.kubernetes.pvc=<Conditional, kubernetes Persistent Volume Claim (this is required when eu.essi_lab.vlab.execute.infrastructure.type=kubernetes)>

eu.essi_lab.vlab.model.task.container.name=<Optional, name of the container of the task running the model. Default value is "AutogeneratedBPEngineContainer">

eu.essi_lab.vlab.aws.asg.accessKey=<Conditional, access key of aws asg (this is required when this is required when eu.essi_lab.vlab.compute.infrastructure.cinfra=aws)>
eu.essi_lab.vlab.aws.asg.secretKey=<Conditional, secret key of aws asg (this is required when this is required when eu.essi_lab.vlab.compute.infrastructure.cinfra=aws)>


eu.essi_lab.vlab.storage.log.type=<Mandatory, service type for storing model execution logs (aws)>
#NOTE the log group must already exist
eu.essi_lab.vlab.aws.ecs.model.loggroup=<Conditional, log group name where model execution logs are stored (this is required if eu.essi_lab.vlab.storage.log.type=aws)>
eu.essi_lab.vlab.aws.ecs.model.logprefix=<Optional, log name prefix of model execution logs (this is used if eu.essi_lab.vlab.storage.log.type=aws). Default value is "bpenginemodelexecution">
eu.essi_lab.vlab.aws.log.accessKey=<Conditional, access key of aws cloudwatch log service (this is required if eu.essi_lab.vlab.storage.log.type=aws)>
eu.essi_lab.vlab.aws.log.secretKey=<Conditional, secret key of aws cloudwatch log service (this is required if eu.essi_lab.vlab.storage.log.type=aws)>
eu.essi_lab.vlab.aws.log.region=<Conditional, region of aws cloudwatch log service (this is required if eu.essi_lab.vlab.storage.log.type=aws)>

eu.essi_lab.vlab.preparejob.image=vlaboratory/alpine:3.5-ssl-sftp
eu.essi_lab.vlab.awsclijob.image=vlaboratory/awscli:1.1.0

eu.essi_lab.vlab.scihub.user=<Optional, user to download sentinel prodcuts from ESA Copernicus Open Access Hub>
eu.essi_lab.vlab.scihub.pwd=<Optional, password to download sentinel prodcuts from ESA Copernicus Open Access Hub>
